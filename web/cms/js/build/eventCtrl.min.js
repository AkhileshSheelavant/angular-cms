"use strict";angular.module("cms.controllers").controller("eventCtrl",["genService","MenuService","$scope","$timeout",function(e,t,n,a){t.update("Veranstaltungen"),n.loadingEvents=!0,e.getAllObjects("locations").then(function(e){n.allLocations=e,a(function(){n.loadingEvents=!1},300)}),e.getAllObjects("events").then(function(e){n.allEvents=e})}]).controller("eventDetailCtrl",["MenuService","$scope","$routeParams","$timeout","$location","genService","toaster","dateFilter",function(e,t,n,a,i,r,o,l){e.update("Veranstaltungen");var s;t.apiPath="events",t.menuName="Veranstaltung bearbeiten",t.deleteMsg="Löschen",t.eventStartDate={},t.eventEndDate={},t.eventStartTime="00:00",t.eventEndTime="00:00",t.event={},t.event.description="",r.getObjectById("events",n.eventId).then(function(e){e||(o.pop("error",null,"Uups. Der angeforderte Event exisitert nicht (mehr)."),i.path("/events")),t.event=e;var n=new Date(t.event.start_date),a=new Date(t.event.end_date);t.eventStartDate=l(n,"yyyy-MM-dd"),t.eventEndDate=l(a,"yyyy-MM-dd"),t.eventStartTime=("0"+n.getHours()).substr(-2)+":"+("0"+n.getMinutes()).substr(-2),t.eventEndTime=("0"+a.getHours()).substr(-2)+":"+("0"+a.getMinutes()).substr(-2)}),r.getAllObjects("repeatOptions").then(function(e){t.allRepeatOptions=e}),r.getAllObjects("files").then(function(e){t.allFiles=e}),r.getAllObjects("locations").then(function(e){t.allLocations=e}),t.deleteMsg="Event löschen",t.ctr=5,t.cancelled=!1,t.saveEvent=function(e){if(!e.name)return void o.pop("warning",null,"Der Eventname muss angegeben werden");if(!t.eventStartDate)return void o.pop("warning",null,"Das Startdatum muss angegeben werden");("[object Date]"!==Object.prototype.toString.call(t.eventEndDate)||"[object Date]"===Object.prototype.toString.call(t.eventEndDate)&&!isNaN(t.eventEndTime.getTime()))&&(t.eventEndDate=null),angular.isString(e.repeat_option)&&(e.repeat_option=JSON.parse(e.repeat_option)),angular.isString(e.file)&&(e.file=JSON.parse(e.file)),angular.isString(e.location)&&(e.location=JSON.parse(e.location));var n=moment(new Date(t.eventStartDate+" "+t.eventStartTime));if(e.start_date=n.format(),t.eventEndDate){var l=moment(new Date(t.eventEndDate+" "+t.eventEndTime));e.end_date=l.format()}else e.end_date=e.start_date;t.loading=!0,r.updateObject("events",e).then(function(){o.pop("success",null,"Event wurde aktualisiert"),s=a(function(){i.path("/events"),t.loading=!1},2500)})},t.$on("$locationChangeStart",function(){a.cancel(s)})}]).controller("eventAddCtrl",["genService","MenuService","$scope","$location","$timeout","toaster",function(e,t,n,a,i,r){t.update("Veranstaltungen");var o;n.apiPath="events",n.menuName="Veranstaltung hinzufügen",n.eventStartDate={},n.eventEndDate={},n.eventStartTime={},n.eventEndTime={},n.event={},n.event.description="",e.getEmptyObject("event").then(function(e){e||(r.pop("error",null,"Uups. Der angeforderte Event exisitert nicht (mehr)."),a.path("/events")),n.event=e}),e.getAllObjects("repeatOptions").then(function(e){n.allRepeatOptions=e}),e.getAllObjects("files").then(function(e){n.allFiles=e}),e.getAllObjects("locations").then(function(e){n.allLocations=e}),n.cancelled=!1,n.saveEvent=function(t){if(!t.name)return void r.pop("warning",null,"Der Eventname muss angegeben werden");if(!n.eventStartDate)return void r.pop("warning",null,"Das Startdatum muss angegeben werden");angular.isString(t.file)&&(t.file=JSON.parse(t.file)),angular.isString(t.location)&&(t.location=JSON.parse(t.location));var l=moment(new Date(n.eventStartDate+" "+n.eventStartTime));t.start_date=l.format(),n.loading=!0,e.insertObject("events",t).then(function(){r.pop("success",null,"Event wurde aktualisiert"),o=i(function(){a.path("/events"),n.loading=!1},2500)})},n.$on("$locationChangeStart",function(){i.cancel(o)})}]);